{
  "RestAPI": {
    "prefix": "apigw-rest-api",
    "body": ["new apigateway.RestApi(this, \"${1:id}\")"],
    "description": "Generate an API Gateway REST API"
  },

  "LambdaRestAPI": {
    "prefix": "apigw-lambda-rest-api",
    "body": [
      "new apigateway.LambdaRestApi(this, \"${1:id}\", {",
      "  handler: ${2:handler},",
      "  proxy: ${3|false,true|},",
      "})"
    ],
    "description": "Generate an API Gateway Lambda REST API"
  },

  "SpecRestApi": {
    "prefix": "apigw-spec-rest-api",
    "body": [
      "new apigateway.SpecRestApi(this, \"${1:id}\", {",
      "  apiDefinition: ${2},",
      "})"
    ],
    "description": "Generate an API Gateway Spec REST API"
  },

  "AssetApiDefinition": {
    "prefix": "apigw-asset-api-definition",
    "body": ["new apigateway.AssetApiDefinition(\"${1:path}\")"],
    "description": "Generate an API Gateway Asset API definition"
  },

  "S3ApiDefinition": {
    "prefix": "apigw-s3-api-definition",
    "body": [
      "new apigateway.S3ApiDefinition(",
      "  ${1:bucket},",
      "  \"${2:key}\",",
      ")"
    ],
    "description": "Generate an API Gateway S3 API definition"
  },

  "InlineApiDefinition": {
    "prefix": "apigw-inline-api-definition",
    "body": ["new apigateway.InlineApiDefinition(", "  ${1}", ")"],
    "description": "Generate an API Gateway Inline API definition"
  },

  "Resource": {
    "prefix": "apigw-add-resource",
    "body": ["${1:item}.addResource(\"${2:item}\")"],
    "description": "Generate an API Gateway resource"
  },

  "Method": {
    "prefix": "apigw-add-method",
    "body": [
      "${1:item}.addMethod(",
      "  \"${2|GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH|}\",",
      "  ${3:integration},",
      ")"
    ],
    "description": "Generate an API Gateway method"
  },

  "HttpIntegration": {
    "prefix": "apigw-http-integration",
    "body": [
      "new apigateway.HttpIntegration(\"${1:url}\", {",
      "  httpMethod: \"${2|GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH|}\",",
      "  proxy: ${3|false,true|},",
      "})"
    ],
    "description": "Generate an API Gateway HTTP integration"
  },

  "LambdaIntegration": {
    "prefix": "apigw-lambda-integration",
    "body": [
      "new apigateway.LambdaIntegration(",
      "  ${1:handler},",
      "  {",
      "    proxy: ${2|false,true|},",
      "  },",
      ")"
    ],
    "description": "Generate an API Gateway lambda integration"
  },

  "AwsIntegration": {
    "prefix": "apigw-aws-integration",
    "body": [
      "new apigateway.AwsIntegration({",
      "  service: \"${1:serviceName}\",",
      "  path: \"${2:servicePath}\",",
      "  proxy: ${3|false,true|},",
      "})"
    ],
    "description": "Generate an API Gateway AWS integration"
  },

  "AddModel": {
    "prefix": "apigw-add-model",
    "body": [
      "${1:api}.addModel(\"${2:id}\", {",
      "  modelName: \"${3:modelName}\",",
      "  contentType: \"${4|application/json,application/x-www-form-urlencoded,application/xml,text/html,text/plain,text/xml,...|}\",",
      "  schema: {",
      "    ${5}",
      "  },",
      ")"
    ],
    "description": "Generate an API Gateway model"
  },

  "AddProxy": {
    "prefix": "apigw-add-proxy",
    "body": [
      "${1:resource}.addProxy({",
      "  defaultIntegration: ${2},",
      "  anyMethod: ${3|false,true|},",
      "})"
    ],
    "description": "Generate an API Gateway proxy"
  },

  "TokenAuthorizer": {
    "prefix": "apigw-token-authorizer",
    "body": [
      "new apigateway.TokenAuthorizer(this, \"${1:id}\", {",
      "  handler: ${2:handler},",
      "})"
    ],
    "description": "Generate an API Gateway token authorizer"
  },

  "RequestAuthorizer": {
    "prefix": "apigw-request-authorizer",
    "body": [
      "new apigateway.RequestAuthorizer(this, \"${1:id}\", {",
      "  handler: ${2:handler},",
      "  identitySources: [",
      "    ${3}",
      "  ],",
      "})"
    ],
    "description": "Generate an API Gateway request authorizer"
  }
}
